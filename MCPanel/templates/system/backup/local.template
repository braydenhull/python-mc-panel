{% import psutil as psutil %}
{% set usage = psutil.disk_usage(destination.Folder) %}
{% import time as time %}
{% import os as os %}
<!DOCTYPE html>
<html>
<head>
    <title>{{ title }} - System - Backup - {{ destination.FriendlyName }}</title>
    <link href="../../../static/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link href="../../../static/css/style.css" rel="stylesheet" media="screen">
    <link href="../../../static/css/font-awesome.min.css" rel="stylesheet" media="screen">
    <link href="../../../static/css/jquery.pnotify.default.css" rel="stylesheet" media="screen">
    <meta charset="UTF-8">
</head>
<body>
{% include "includes/navbar.template" %}
<div class="container" style="padding-top: 10px;">
    <div>
        <h3>Local Host: {{ destination.FriendlyName }}</h3>
        <div id="disk_usage_graph" class="col-md-4"></div>
        <div class="col-md-8">
            <h4>Server Backups</h4>
            {% set iterated = False %}{# this is to get around the lack of else with for in tornado #}
            <div class="panel-group" id="backups">
                {% for server_name in sorted(backups) %}
                    {% set iterated = True %}
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="backups" href="#collapse-{{ server_name }}">
                                    <strong>{{ server_name }}</strong>
                                </a>
                            </h4>
                        </div>

                        <div id="collapse-{{ server_name }}" class="panel-collapse collapse">
                            <div class="panel-body">
                                <table class="table table-bordered">
                                    <thead>
                                    <tr>
                                        <th>File</th>
                                        <th>Backup Date</th>
                                        <th>Size</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                        {% for index, backup in enumerate(backups[server_name]) %}
                                        <tr>
                                            <td>{{ backup['file'] }}</td>
                                            <td>{{ time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(backup['date'])) }} UTC</td>
                                            {% try %}
                                                {% set size = os.path.getsize(backup['file']) %}{# Workaround for quirk with the way it encounters the exception, and how HTML is rendered with it #}
                                                <td>{{ size / 1024 / 1024 }}MB</td>
                                            {% except OSError as e %}
                                                    <td>File is missing or inaccessible: {{ e }}</td>
                                            {% end %}
                                            <td><button title="Delete backup" class="btn btn-danger btn-xs" server_name="{{ server_name }}" index="{{ index }}"><i class="fa fa-trash-o"></i></button></td>
                                        </tr>
                                        {% end %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                {% end %}
                {% if not iterated %}
                <p>No backups present on the server.</p>
                {% end %}
            </div>
        </div>
    </div>
</div>
<script src="../../../static/js/jquery.min.js"></script>
<script src="../../../static/js/bootstrap.min.js"></script>
<script src="../../../static/js/highcharts.js"></script>
<!-- {% raw backups %} -->
<script>
    $(function(){

        $("#backups").collapse({
            toggle: true
        });

        var disk_usage = {
            'Used': {{ round(float(usage.used) / 1000 / 1000 / 1000, 2) }},
            'Free': {{ round(float(usage.free) / 1000 / 1000 / 1000, 2) }}
        };
        $("#disk_usage_graph").highcharts({
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
            },
            title: {
                text: 'Disk Stats for {{ destination.Folder }}'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        color: '#000000',
                        connectorColor: '#000000',
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                    }
                }
            },
            tooltip: {
                formatter: function(){
                    return '<b>' + disk_usage[this.point.name] + 'GB</b> ' + this.point.name
                }
            },
            series: [{
                type: 'pie',
                name: 'Disk usage',
                data: [
                    ['Used', {{ usage.percent }}],
                    ['Free', {{ 100 - usage.percent }}]
                ]
            }]
        })
    })
</script>
{% include "includes/footer.template" %}
</body>
</html>