{% import psutil as psutil %} {# this is to stop pycharm from whinging #}
{% import netifaces as netifaces %}
{% import json as json %}
<!DOCTYPE html>
<html>
<head>
    <title>{{ title }} - Servers</title>
    <link href="../../static/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link href="../../static/css/style.css" rel="stylesheet" media="screen">
    <link href="../../static/css/font-awesome.min.css" rel="stylesheet" media="screen">
    <link href="../../static/css/jquery-ui.min.css" rel="stylesheet" media="screen">
    <meta charset="UTF-8">
</head>
<body>
{% include "includes/navbar.template" %}
<div class="container">
    <div class="col-md-12">
        <h3>Server list</h3>
        <table id="serversTable" class="table table-bordered">
            <thead>
            <tr>
                <th style="width: 15px;">ID</th>
                <th>Address</th>
                <th>Port</th>
                <th>Owner</th>
                <th style="width: 160px;">Actions</th>
            </tr>
            </thead>
            <tbody>
            {% for server in servers %}
                {% if server.Owner == current_user or handler.application.usernames[current_user]['Is_Admin'] %}
                <tr>
                    <td>{{ server.ID }}</td>
                    <td>{{ server.Address }}</td>
                    <td>{{ server.Port }}</td>
                    <td>{{ server.Owner }}</td>
                    <td>
                        <div class="btn-group">
                            <a href="{{ reverse_url("Server_Index", server.ID) }}" class="btn btn-sm btn-primary"><i class="fa fa-edit"></i></a>
                            {% if handler.application.usernames[current_user]['Is_Admin'] %}
                                <button server-id="{{ server.ID }}" type="button" class="btn btn-sm btn-danger delete-button"><i class="fa fa-trash-o"></i></button>
                            {% end %}
                            <button server-id="{{ server.ID }}" type="button" class="btn btn-sm btn-warning stop-server-button"><i class="fa fa-stop"></i></button>
                            <button server-id="{{ server.ID }}" type="button" class="btn btn-sm btn-success start-server-button" id="startServer"><i class="fa fa-play"></i></button>
                        </div>
                    </td>
                </tr>
                {% end %}
            {% end %}
            </tbody>
        </table>
        {% if handler.application.usernames[current_user]['Is_Admin'] %}
        <a data-toggle="modal" type="button" class="btn btn-primary" id="createServer" href="#createServerModal">Create Server</a>
        <div>
            <div class="modal fade" id="createServerModal" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><i id="refresh" class="fa fa-refresh"></i> Create New Server</h4>
                        </div>
                        <div class="modal-body">
                            <div class="alert alert-block alert-danger" id="criticalError">
                                <h4>Critical Error</h4>
                                <p id="errorMessage"></p>
                            </div>
                            <label>
                                Minecraft Server
                                <select id="serverSelection" class="form-control">
                                    <option>Please select an option</option>
                                    <option value="craftbukkit">CraftBukkit</option>
                                </select>
                            </label>
                            <label>
                                Server Owner
                                <select id="serverOwner" class="form-control">
                                    {% for user in handler.application.db.getUsers() %}
                                        {% if user.Username == current_user %}
                                        <option selected="">{{ user.Username }}</option>
                                        {% else %}
                                        <option>{{ user.Username }}</option>
                                        {% end %}
                                    {% end %}
                                </select>
                            </label>
                            <br><br>
                            <div style="display: inline;">
                                <label for="currentMem">Current (max {{ psutil.virtual_memory().total / 1024 / 1024 }}MB): </label>
                                <span id="currentMem">1024MB</span>
                            </div>

                            <div id="memorySlider"></div>
                            <br>
                            <div class="form-inline" id="addressForm">
                                <label>
                                    Server Address
                                    <select class="form-control" id="serverAddress">
                                        {% for interface in netifaces.interfaces() %}
                                        <option value="{{ netifaces.ifaddresses(interface)[netifaces.AF_INET][0]['addr'] }}">{{ netifaces.ifaddresses(interface)[netifaces.AF_INET][0]['addr'] }}</option>
                                        {% end %}
                                        <option value="0.0.0.0">0.0.0.0</option>
                                    </select>
                                </label>
                                <label id="serverPortLabel">
                                    Server Port
                                    <input class="form-control" type="number" id="serverPort">
                                </label>
                            </div>

                            <hr><div id="craftbukkit_Form">
                                <div class="form-inline">
                                    <label>
                                        Channel
                                        <select class="form-control" id="craftbukkit_BuildChannel">
                                            <option value="rb">Recommended</option>
                                            <option value="beta">Beta</option>
                                            <option value="dev">Development</option>
                                        </select>
                                    </label>

                                    <label>
                                        Build
                                        <select class="form-control" id="craftbukkit_BuildSelect">
                                        </select>
                                    </label>
                                </div>
                                <strong>Build Version: </strong><span id="craftbukkit_BuildVersion"></span>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button id="modalCreateServer" type="button" class="btn btn-success">Create</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div>
            <div class="modal fade" id="createServerProgressModal" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title">Provisioning Server</h4>
                        </div>
                        <div class="modal-body">
                            <div class="progress progress-striped active" id="progressBar">
                                <div id="progressBarStatus" class="progress-bar" role="progressbar" style="width: 100%"></div>
                            </div>
                            <textarea id="provisioningLog" class="form-control" readonly="" rows="4"></textarea>
                        </div>
                        <div class="modal-footer">
                            <button id="createServerShowLog" class="btn btn-primary">Show Log</button>
                            <button id="createServerProgressClose" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div class="modal fade" id="deleteServerModal" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title text-danger" id="deleteServerModalTitle">Delete Server</h4>
                        </div>
                        <div class="modal-body">
                            <p id="deleteServerModalMessage" class="text-danger"></p>
                            <p>This will: </p>
                            <ul>
                                <li>Remove all world data;</li>
                                <li>Remove the Linux user associated with this server;</li>
                                <li>Remove all configuration associated with the server; and</li>
                                <li>Remove all references from the database</li>
                            </ul>
                            <p>Please ensure all data is backed up before proceeding.</p>
                            <input type="hidden" id="deleteServerModalServerID">
                        </div>
                        <div class="modal-footer">
                            <button id="deleteServerModalClose" class="btn btn-default" data-dismiss="modal" type="button">Close</button>
                            <button id="deleteServerModalConfirm" class="btn btn-danger" type="button">Delete Server</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {% end %}

        <div>
            <div class="modal fade" id="startServerModal" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title text-success"><i class="fa fa-refresh" id="startServerModalRefresh"></i> Start Server</h4>
                        </div>
                        <div class="modal-body">
                            <div class="alert alert-block alert-danger" id="startServerModalCriticalError">
                                <h4>Critical Error</h4>
                                <p id="startServerModalErrorMessage"></p>
                            </div>
                            <p class="text-success" id="successMessage"></p>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-default" data-dismiss="modal" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div class="modal fade" id="stopServerModal" tabindex="-1" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title text-warning">Stop Server</h4>
                        </div>
                        <div class="modal-body">
                            <div class="alert alert-block alert-danger" id="stopServerModalCriticalError">
                                <h4>Critical Error</h4>
                                <p id="stopServerModalErrorMessage"></p>
                            </div>
                            <form class="form-inline">
                                <label><input type="checkbox" id="stopServerModalForceStop"> Force Stop</label>
                            </form>
                            <p>Force stop forces the process to close rather than just sending "stop" to the console.
                            This should only be enabled if the server has become unresponsive.</p>
                            <button type="button" id="stopServerModalStopButton" class="btn btn-warning"><i class="fa fa-refresh" id="stopServerModalRefresh"></i> Stop</button>
                            <input type="hidden" id="stopServerModalServerID">
                            <p class="text-success" id="stopServerModalSuccessMessage"></p>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-default" data-dismiss="modal" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../../static/js/jquery-2.0.3.min.js"></script>
<script src="../../static/js/jquery-ui.min.js"></script>
<script src="../../static/js/bootstrap.min.js"></script>
<script src="../../static/js/jquery.cookie.js"></script>
<script>
    $(function(){

        var serversTable = $("#serversTable");
        var server_id;

        serversTable.on('click', '.delete-button', function(){
            server_id = $(this).attr('server-id');
            $("#deleteServerModalTitle").text("Delete Server " + server_id);
            $("#deleteServerModalServerID").val(server_id);
            $("#deleteServerModal").modal("show");
        });

        serversTable.on('click', '.start-server-button', function(){
            server_id = $(this).attr('server-id');
            $("#startServerModalCriticalError").hide();
            $("#successMessage").text("");
            $("#startServerModal").modal('show');
            $("#startServerModalRefresh").addClass("fa-spin");
            $.post('{{ reverse_url("Servers_Ajax_StartServer") }}', {"server_id": server_id}).done(function(data){
                if(data['result']['success']){
                    $("#successMessage").text("Successfully started the server.")
                } else {
                    $("#startServerModalCriticalError").fadeIn();
                    $("#startServerModalErrorMessage").text(data['result']['message'])
                }
                $("#startServerModalRefresh").removeClass("fa-spin");
            }).fail(function(data){
                $("#startServerModalCriticalError").fadeIn();
                $("#startServerModalErrorMessage").text("The server returned an error. Please notify the system administrators if this persists. Error Data: " + JSON.stringify(data['responseJSON']));
                $("#startServerModalRefresh").removeClass("fa-spin");
            })
        });

        serversTable.on('click', '.stop-server-button', function(){
            server_id = $(this).attr('server-id');
            $("#stopServerModal").modal('show');
            $("#stopServerModalServerID").val(server_id);
            $("#stopServerModalSuccessMessage").text(""); // Clear out message in case somebody decides it'd be a cool idea to stop more than one server at a time
            $("#stopServerModalCriticalError").hide();
        });

        $("#stopServerModalStopButton").click(function(){
            server_id = $("#stopServerModalServerID").val();
            var force = $("#stopServerModalForceStop").prop('checked');
            $("#stopServerModalRefresh").addClass('fa-spin');

            $.post('{{ reverse_url("Servers_Ajax_StopServer") }}', {"server_id": server_id, "force": force}).done(function(data){
                if(data['result']['success']){
                    $("#stopServerModalSuccessMessage").text("Successfully sent the stop request.");
                } else {
                    $("#stopServerModalCriticalError").fadeIn();
                    $("#stopServerModalErrorMessage").text(data['result']['message']);
                }
                $("#stopServerModalRefresh").removeClass("fa-spin");
            }).fail(function(data){
                $("#stopServerModalCriticalError").fadeIn();
                $("#stopServerModalErrorMessage").text("The server returned an error. Please notify the system administrators if this persists. Error Data: " + JSON.stringify(data['responseJSON']));
                $("#stopServerModalRefresh").removeClass("fa-spin");
            });
        });

        $("#deleteServerModalConfirm").removeAttr('disabled'); // for some reason it is disabled on page load in some circumstances

        $("#deleteServerModalConfirm").click(function(){
            console.log("test");
            if(!$("#deleteServerModalConfirm").prop('disabled')){
                $("#deleteServerModalConfirm").addClass('disabled').attr('disabled', '');
                $.post('{{ reverse_url('Servers_DeleteServer') }}', {'server_id': $("#deleteServerModalServerID").val()}).done(function(data){
                    $("#deleteServerModal").modal("hide");
                    location.reload()
                })
            }

        });

        var server = null;
        var ws_socket = new WebSocket("ws://" + document.domain + "{{ reverse_url("Servers_WebSocket_CreateServer") }}");
        $("#criticalError").hide();
        $("#craftbukkit_Form").hide();
        $("#startServerModalCriticalError").hide();
        $("#stopServerModalCriticalError").hide();
        $("#serverSelection").change(function(event){
            server = event.currentTarget.value;
            if(server === "craftbukkit"){
                $("#craftbukkit_Form").slideDown();
                $("#refresh").addClass("fa-spin");
                $.post('{{ reverse_url('Servers_Ajax_GetInfo') }}', {'server_type': server, 'request_type': 'get_streams'}).done(function(data){
                    $("#craftbukkit_BuildChannel").empty();
                    $.each(data['result']['results']['values'], function(index){
                        $("#craftbukkit_BuildChannel").append($("<option></option>").val(data['result']['results']['values'][index]['value']).html(data['result']['results']['values'][index]['name']))
                    });
                    refresh_build_list(server)
                });
            }
        });

        function refresh_build_list(type){
            $.post('{{ reverse_url('Servers_Ajax_GetInfo') }}', {'server_type': type, 'request_type': 'get_builds', 'stream': $("#" + type + "_BuildChannel").val()}).done(function(data){
                if(data['result']['success']){
                    $("#" + type + "_BuildSelect").empty();
                    $.each(data['result']['results']['builds'], function(index, val){
                        $("#" + type + "_BuildSelect").append($("<option></option>").val(val).html(val))
                    });
                    $("#" + type + "_BuildVersion").text(data['result']['results']['latest_version'])
                }
                $("#refresh").removeClass("fa-spin");
            })
        }

        $("#memorySlider").slider({
            range: "max",
            min: 128,
            max: {{ psutil.virtual_memory().total / 1024 / 1024 }},
            value: 1024,
            step: 128,
            slide: function(event,ui){
                $("#currentMem").text(ui.value + 'MB')
            }
        });

        $("#serverPort,#serverAddress").change(function(){
            if($("#serverPort").val() != ''){ // Don't attempt to check on empty port field.
                $("#refresh").addClass("fa-spin");
                $.post('{{ reverse_url('Servers_Ajax_CheckAddress') }}', {'address': $("#serverAddress").val(), 'port': $("#serverPort").val()}).done(function(data){
                    if(data['result']['used']){
                        $("#criticalError").fadeIn();
                        $("#errorMessage").text("IP address and port combination is in use already.");
                        $("#addressForm").removeClass().addClass("form-inline has-error")
                    } else if(!data['result']['success']) {
                        $("#criticalError").fadeIn();
                        $("#errorMessage").text(data['result']['message']);
                        $("#addressForm").removeClass().addClass("form-inline has-error")
                    } else {
                        $("#criticalError").fadeOut();
                        $("#errorMessage").text(); // Reset error
                        $("#addressForm").removeClass().addClass("form-inline has-success")
                    }
                    $("#refresh").removeClass("fa-spin");
                })
            }
        });

        $("[id*=BuildChannel],[id*=BuildSelect]").change(function(event){
            console.log(event['currentTarget']['id']);
            $("#refresh").addClass("fa-spin");
            if(event['currentTarget']['id'].split('_')[1] === 'BuildChannel'){
                refresh_build_list(server)
            } else if(event['currentTarget']['id'].split('_')[1] == 'BuildSelect'){
                $.post('{{ reverse_url('Servers_Ajax_GetInfo') }}', {'server_type': server, 'request_type': 'get_build_info', 'build': $("#"+ event['currentTarget']['id']).val()}).done(function(data){
                    $("#" + server + "_BuildVersion").text(data['result']['results']['info']['version']);
                    $("#refresh").removeClass("fa-spin")
                })
            }
        });

        $("#modalCreateServer").click(function(){
            if(server == null){
                $("#criticalError").fadeIn();
                $("#errorMessage").text("Please select a server type.");
                $("#serverSelection").addClass("has-error")
            } else {
                $("#createServerModal").modal('hide');

                ws_socket.onmessage = function(event){
                    console.log(event.data);
                    $("#provisioningLog").append(event.data + '\r\n');
                    $("#progressBarStatus").text(JSON.parse(event.data)['message']);
                    if(JSON.parse(event.data)['complete']){
                        $("#progressBarStatus").addClass("progress-bar-success");
                        $("#progressBar").removeClass("active");
                        setTimeout(function(){
                            location.reload()
                        }, 500)
                    } else if(!JSON.parse(event.data)['success']){
                        $("#progressBar").removeClass("active");
                        $("#progressBarStatus").addClass("progress-bar-danger");
                    }
                };

                ws_socket.send(JSON.stringify({
                    'params': {
                        'memory': $("#memorySlider").slider("value"),
                        'address': $("#serverAddress").val(),
                        'port': $("#serverPort").val(),
                        'build': $("#" + server + "_BuildSelect").val(),
                        'stream': $("#" + server + "_BuildChannel").val(),
                        'type': server
                    },
                    'authentication': $.cookie("session"),
                    'owner': $("#serverOwner").val()
                }));

                $("#createServerProgressModal").modal("show");
                $("#provisioningLog").hide();
                $("#createServerProgressClose").hide();
            }

        });

        $("#createServerShowLog").click(function(){
            $("#provisioningLog").show();
        })
    })
</script>
{% include "includes/footer.template" %}
</body>
</html>